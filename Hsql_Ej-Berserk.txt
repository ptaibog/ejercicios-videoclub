-- DIFICULTAD: Berserk mode (enunciados simples, mucha diversión...)


-- 35. Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película
								
			-- GROUP_CONCAT() concatena elementos de un grupo
			-- las subconsultas tambien pueden llevar alias, las vamos a necesitar
			-- (subconsulta)alias
			-- subconsulta inner join subconsulta on ___ = ___
			-- podemos poner mas de un on, poniendo despues del primer on un AND


SELECT s.DIRECTOR_ID, GROUP_CONCAT (s.GENRE_NAME)
FROM ( SELECT d.DIRECTOR_NAME, COUNT(g.GENRE_ID) AS GENRE_COUNT
		FROM PUBLIC.GENRES g 
		INNER JOIN PUBLIC.MOVIES m ON m.GENRE_ID = g.GENRE_ID
		INNER JOIN PUBLIC.DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
		GROUP BY g.GENRE_ID, d.DIRECTOR_NAME  
		) AS s
			INNER JOIN (SELECT m.DIRECTOR_ID, MAX (s.GENRE_COUNT) AS MAX_GENRE_COUNT
			FROM (SELECT COUNT(g.GENRE_ID), d.DIRECTOR_NAME AS GENRE_COUNT
					FROM PUBLIC.GENRES g 
					INNER JOIN PUBLIC.MOVIES m ON m.GENRE_ID = g.GENRE_ID
					INNER JOIN PUBLIC.DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
					GROUP BY g.GENRE_ID, d.DIRECTOR_NAME
					) AS s
					GROUP BY s.DIRECTOR_ID
					) AS mm
					ON s.DIRECTOR_ID = mm.DIRECTOR_ID 
				    AND s.GENRE_COUNT = mm.MAX_GENRE_COUNT;




SELECT d.DIRECTOR_NAME, g.GENRE_NAME, GROUP_CONCAT(DISTINCT m.GENRE_ID) 
FROM PUBLIC.DIRECTORS d
INNER JOIN PUBLIC.MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID
INNER JOIN PUBLIC.GENRES g ON m.GENRE_ID = g.GENRE_ID
GROUP BY DISTINCT d.DIRECTOR_NAME, m.GENRE_ID, g.GENRE_NAME 
ORDER BY GROUP_CONCAT(DISTINCT m.GENRE_ID) DESC;

SELECT d.DIRECTOR_NAME, m.GENRE_ID  
FROM PUBLIC.DIRECTORS d
INNER JOIN PUBLIC.MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID
INNER JOIN PUBLIC.GENRES g ON m.GENRE_ID = g.GENRE_ID
WHERE g.GENRE_ID  IN (SELECT d.DIRECTOR_ID,
					 GROUP_CONCAT (GENRE_NAME)
					 FROM GENEROS_DIRECTORES_PELÍCULAS_IDGENEROS  
					 GROUP BY d.DIRECTOR_ID);

--CONSULTA DONDE SALEN LOS DIRECTORES Y EL GÉNERO DE LA PELÍCULA QUE ESTÁ FILMANDO
SELECT g.GENRE_NAME , d.DIRECTOR_NAME , m.MOVIE_NAME , g.GENRE_ID 
FROM PUBLIC.GENRES g
INNER JOIN PUBLIC.MOVIES m ON g.GENRE_ID = m.GENRE_ID 
INNER JOIN PUBLIC.DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
ORDER BY m.DIRECTOR_ID;
--CREÉ LA VISTA DE ESA CONSULTA
CREATE 
VIEW GENEROS_DIRECTORES_PELÍCULAS_IDGENEROS AS SELECT
g.GENRE_NAME , d.DIRECTOR_NAME , m.MOVIE_NAME , g.GENRE_ID  
FROM PUBLIC.GENRES g
INNER JOIN PUBLIC.MOVIES m ON g.GENRE_ID = m.GENRE_ID 
INNER JOIN PUBLIC.DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
ORDER BY m.DIRECTOR_ID;
--agrupé los géneros
SELECT DIRECTOR_NAME ,
GROUP_CONCAT (GENRE_NAME)
FROM GENEROS_DIRECTORES_PELÍCULAS_IDGENEROS  
GROUP BY DIRECTOR_NAME; 




-- SOLUCION PRIMERA:

SELECT d.DIRECTOR_NAME, GROUP_CONCAT(DISTINCT g.GENRE_NAME), COUNT(g.GENRE_NAME) 
FROM MOVIES m
INNER JOIN GENRES g ON m.GENRE_ID = g.GENRE_ID
INNER JOIN PUBLIC.DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
GROUP BY d.DIRECTOR_NAME, g.GENRE_NAME 
--HAVING MAX(COUNT(g.GENRE_NAME))
ORDER BY d.DIRECTOR_NAME;


-- SOLUCION COMPLETA!!!!:

SELECT Contar_gen.DIRECTOR_NAME AS "Nombre director", GROUP_CONCAT(Contar_gen.GENRE_NAME) AS "Generos favoritos"
FROM (SELECT d.DIRECTOR_NAME, g.GENRE_NAME, COUNT(g.GENRE_ID) AS Cantidad_generos
      FROM MOVIES m
      INNER JOIN GENRES g ON m.GENRE_ID = g.GENRE_ID
      INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID
      GROUP BY g.GENRE_ID, d.DIRECTOR_NAME) Contar_gen
INNER JOIN (SELECT Contar_gen2.DIRECTOR_NAME, MAX(Contar_gen2.Cantidad_generos) Max_cant_gen
            FROM (SELECT d2.DIRECTOR_NAME, g2.GENRE_NAME, COUNT(g2.GENRE_ID) AS Cantidad_generos
                  FROM MOVIES m2
                  INNER JOIN GENRES g2 ON m2.GENRE_ID = g2.GENRE_ID
                  INNER JOIN DIRECTORS d2 ON m2.DIRECTOR_ID = d2.DIRECTOR_ID
                  GROUP BY g2.GENRE_ID, d2.DIRECTOR_ID) Contar_gen2
            GROUP BY Contar_gen2.DIRECTOR_ID) ValorMax
ON Contar_gen.DIRECTOR_NAME = ValorMax.DIRECTOR_NAME
AND Contar_gen.Cantidad_generos = ValorMax.Max_cant_gen
GROUP BY Contar_gen.DIRECTOR_NAME
ORDER BY Contar_gen.DIRECTOR_NAME;




-- 36. Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas
					
SELECT s.STUDIO_NAME, COUNT(n.NATIONALITY_NAME), n.NATIONALITY_NAME  
FROM PUBLIC.STUDIOS s
INNER JOIN	PUBLIC.MOVIES m ON s.STUDIO_ID = m.STUDIO_ID 
INNER JOIN PUBLIC.NATIONALITIES n ON m.NATIONALITY_ID = n.NATIONALITY_ID 
GROUP BY s.STUDIO_NAME, n.NATIONALITY_NAME  
ORDER BY COUNT(n.NATIONALITY_NAME) DESC;

SELECT s.STUDIO_ID, s.STUDIO_NAME, COUNT(n.NATIONALITY_ID) 
FROM PUBLIC.STUDIOS s
INNER JOIN	PUBLIC.MOVIES m ON s.STUDIO_ID = m.STUDIO_ID 
INNER JOIN PUBLIC.NATIONALITIES n ON m.NATIONALITY_ID = n.NATIONALITY_ID  
GROUP BY s.STUDIO_ID;